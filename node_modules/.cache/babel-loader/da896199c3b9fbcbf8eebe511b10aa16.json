{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  height: 200px;\\n  border-width: 2px;\\n  border-radius: 5px;\\n  border-color: \", \";\\n  border-style: \", \";\\n  background-color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Dropzone from 'react-dropzone';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(acceptedfiles, rejected) {\n      ReactDOM.findDOMNode(this).submit();\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styled = require('styled-components').default;\n\n      var getColor = function getColor(props) {\n        if (props.isDragReject) {\n          return '#c66';\n        }\n\n        if (props.isDragActive) {\n          return '#6c6';\n        }\n\n        return '#666';\n      };\n\n      var Container = styled.div(_templateObject(), function (props) {\n        return getColor(props);\n      }, function (props) {\n        return props.isDragReject || props.isDragActive ? 'solid' : 'dashed';\n      }, function (props) {\n        return props.isDragReject || props.isDragActive ? '#eee' : '';\n      });\n      return React.createElement(Dropzone, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragAccept = _ref.isDragAccept,\n            isDragReject = _ref.isDragReject,\n            acceptedFiles = _ref.acceptedFiles;\n        return React.createElement(Container, Object.assign({\n          isDragActive: isDragActive,\n          isDragReject: isDragReject\n        }, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })), isDragAccept ? 'Drop' : 'Drag', \" files here...\");\n      });\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","Dropzone","FileUploader","props","onDrop","acceptedFiles","rejectedFiles","handleFiles","bind","handleDrop","acceptedfiles","rejected","findDOMNode","submit","event","preventDefault","styled","require","default","getColor","isDragReject","isDragActive","Container","div","getRootProps","getInputProps","isDragAccept","mapStateToProps","state"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAOnBC,MAPmB,GAOV,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACvC;AACH,KATkB;;AAGf,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAMUE,a,EAAeC,Q,EAAU;AAChCb,MAAAA,QAAQ,CAACc,WAAT,CAAqB,IAArB,EAA2BC,MAA3B;AACH;;;gCAEWC,K,EAAO;AACf,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;AAEJ;;;6BAEQ;AACL,UAAMC,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BC,OAA5C;;AAEA,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAChB,KAAD,EAAW;AACxB,YAAIA,KAAK,CAACiB,YAAV,EAAwB;AACpB,iBAAO,MAAP;AACH;;AACD,YAAIjB,KAAK,CAACkB,YAAV,EAAwB;AACpB,iBAAO,MAAP;AACH;;AACD,eAAO,MAAP;AACH,OARD;;AAUA,UAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV,oBAKL,UAAApB,KAAK;AAAA,eAAIgB,QAAQ,CAAChB,KAAD,CAAZ;AAAA,OALA,EAML,UAAAA,KAAK;AAAA,eAAIA,KAAK,CAACiB,YAAN,IAAsBjB,KAAK,CAACkB,YAA5B,GAA2C,OAA3C,GAAqD,QAAzD;AAAA,OANA,EAOD,UAAAlB,KAAK;AAAA,eAAIA,KAAK,CAACiB,YAAN,IAAsBjB,KAAK,CAACkB,YAA5B,GAA2C,MAA3C,GAAoD,EAAxD;AAAA,OAPJ,CAAf;AAWA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,gBAA8F;AAAA,YAA3FG,YAA2F,QAA3FA,YAA2F;AAAA,YAA7EC,aAA6E,QAA7EA,aAA6E;AAAA,YAA9DJ,YAA8D,QAA9DA,YAA8D;AAAA,YAAhDK,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCN,YAAkC,QAAlCA,YAAkC;AAAA,YAApBf,aAAoB,QAApBA,aAAoB;AAC3F,eACI,oBAAC,SAAD;AACI,UAAA,YAAY,EAAEgB,YADlB;AAEI,UAAA,YAAY,EAAED;AAFlB,WAGQI,YAAY,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMKC,YAAY,GAAG,MAAH,GAAY,MAN7B,mBADJ;AAUH,OAZL,CADJ;AAgBH;;;;EA/DsB7B,S;;AAkE3B,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAe5B,UAAU,CAACD,OAAO,CAAC4B,eAAD,EAAkB,IAAlB,CAAP,CAA+BzB,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    onDrop = (acceptedFiles, rejectedFiles) => {\r\n        // Do something with files\r\n    }\r\n\r\n    handleDrop(acceptedfiles, rejected) {\r\n        ReactDOM.findDOMNode(this).submit();\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const styled = require('styled-components').default;\r\n\r\n        const getColor = (props) => {\r\n            if (props.isDragReject) {\r\n                return '#c66';\r\n            }\r\n            if (props.isDragActive) {\r\n                return '#6c6';\r\n            }\r\n            return '#666';\r\n        };\r\n\r\n        const Container = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-width: 2px;\r\n  border-radius: 5px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: ${props => props.isDragReject || props.isDragActive ? 'solid' : 'dashed'};\r\n  background-color: ${props => props.isDragReject || props.isDragActive ? '#eee' : ''};\r\n`;\r\n\r\n\r\n        return (\r\n            <Dropzone>\r\n                {({ getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles }) => {\r\n                    return (\r\n                        <Container\r\n                            isDragActive={isDragActive}\r\n                            isDragReject={isDragReject}\r\n                            {...getRootProps()}\r\n                        >\r\n                            <input {...getInputProps()} />\r\n                            {isDragAccept ? 'Drop' : 'Drag'} files here...\r\n                </Container>\r\n                    )\r\n                }}\r\n            </Dropzone>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}