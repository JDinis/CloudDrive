{"ast":null,"code":"var _this = this;\n\nimport { ADDFILES, LISTFILES } from './Types';\nimport axios from 'axios';\nexport var listFiles = function listFiles() {\n  return function (dispatch) {\n    axios.get('/files').then(function (files) {\n      dispatch({\n        type: LISTFILES,\n        payload: files.data\n      });\n    });\n  };\n};\nexport var getFile = function getFile(filename) {\n  return function (dispatch) {\n    axios.get('/search/' + filename).then(function (response) {\n      var blob = new Blob([response.data]);\n      var ref = _this.state.ref;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDriveServer\\clouddrive\\src\\Actions\\FileActions.js"],"names":["ADDFILES","LISTFILES","axios","listFiles","dispatch","get","then","files","type","payload","data","getFile","filename","response","blob","Blob","ref","state","current","href","URL","createObjectURL","download","click"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,SAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACvCF,IAAAA,KAAK,CAACG,GAAN,CAAU,QAAV,EACKC,IADL,CACU,UAAAC,KAAK,EAAI;AACXH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,SADD;AAELQ,QAAAA,OAAO,EAAEF,KAAK,CAACG;AAFV,OAAD,CAAR;AAIH,KANL;AAOH,GARwB;AAAA,CAAlB;AAUP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AAAA,SAAc,UAAAR,QAAQ,EAAI;AAC7CF,IAAAA,KAAK,CAACG,GAAN,CAAU,aAAaO,QAAvB,EAAiCN,IAAjC,CAAsC,UAAAO,QAAQ,EAAI;AAC9C,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,QAAQ,CAACH,IAAV,CAAT,CAAX;AACA,UAAIM,GAAG,GAAG,KAAI,CAACC,KAAL,CAAWD,GAArB;AACAA,MAAAA,GAAG,CAACE,OAAJ,CAAYC,IAAZ,GAAmBC,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CAAnB;AACAE,MAAAA,GAAG,CAACE,OAAJ,CAAYI,QAAZ,GAAuBV,QAAvB;AACAI,MAAAA,GAAG,CAACE,OAAJ,CAAYK,KAAZ;AACH,KAND;AAOH,GARsB;AAAA,CAAhB","sourcesContent":["import { ADDFILES, LISTFILES } from './Types'\r\nimport axios from 'axios';\r\n\r\nexport const listFiles = () => dispatch => {\r\n    axios.get('/files')\r\n        .then(files => {\r\n            dispatch({\r\n                type: LISTFILES,\r\n                payload: files.data\r\n            })\r\n        });\r\n}\r\n\r\nexport const getFile = (filename) => dispatch => {\r\n    axios.get('/search/' + filename).then(response => {\r\n        let blob = new Blob([response.data])\r\n        let ref = this.state.ref\r\n        ref.current.href = URL.createObjectURL(blob)\r\n        ref.current.download = filename\r\n        ref.current.click()\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}