{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      axios.post('http://localhost:3001/backend/file/upload', {\n        Files: event.dataTransfer.files\n      });\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: \"dropzone ropzone--isActive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })), isDragActive ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Drop files here...\") : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Try dropping some files here, or click to select files to upload.\"));\n      });\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","axios","Dropzone","FileUploader","props","handleFiles","bind","handleDrop","event","preventDefault","post","Files","dataTransfer","files","onDrop","getRootProps","getInputProps","isDragActive","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAEUE,K,EAAO;AACd,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;;AAEDR,MAAAA,KAAK,CAACS,IAAN,CAAW,2CAAX,EAAwD;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACI,YAAN,CAAmBC;AAA5B,OAAxD;AACH;;;gCAEWL,K,EAAO;AACf,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;AAEJ;;;6BAEQ;AACL,aACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKK,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,gBAAmD;AAAA,YAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,YAAnBC,YAAmB,QAAnBA,YAAmB;AAChD,eACI,6CACQF,YAAY,EADpB;AAEI,UAAA,SAAS,EAAC,4BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAII,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,EAMQC,YAAY,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADQ,GAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EARZ,CADJ;AAaH,OAfL,CADJ;AAmBH;;;;EA3CsBpB,S;;AA8C3B,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAenB,UAAU,CAACD,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bf,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    handleDrop(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        axios.post('http://localhost:3001/backend/file/upload', { Files: event.dataTransfer.files });\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({ getRootProps, getInputProps, isDragActive }) => {\r\n                    return (\r\n                        <div\r\n                            {...getRootProps()}\r\n                            className='dropzone ropzone--isActive'\r\n                        >\r\n                            <input {...getInputProps()} />\r\n                            {\r\n                                isDragActive ?\r\n                                    <p>Drop files here...</p> :\r\n                                    <p>Try dropping some files here, or click to select files to upload.</p>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Dropzone>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}