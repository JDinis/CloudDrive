{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { FilePond } from 'react-filepond';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(acceptedfiles, rejected) {\n      ReactDOM.findDOMNode(this).submit();\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var baseStyle = {\n        width: 200,\n        height: 200,\n        borderWidth: 2,\n        borderColor: '#666',\n        borderStyle: 'dashed',\n        borderRadius: 5\n      };\n      var activeStyle = {\n        borderStyle: 'solid',\n        borderColor: '#6c6',\n        backgroundColor: '#eee'\n      };\n      var rejectStyle = {\n        borderStyle: 'solid',\n        borderColor: '#c66',\n        backgroundColor: '#eee'\n      };\n      return React.createElement(FilePond, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","FilePond","FileUploader","props","onDrop","acceptedFiles","rejectedFiles","handleFiles","bind","handleDrop","acceptedfiles","rejected","findDOMNode","submit","event","preventDefault","baseStyle","width","height","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAOnBC,MAPmB,GAOV,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACvC;AACH,KATkB;;AAGf,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAMUE,a,EAAeC,Q,EAAU;AAChCb,MAAAA,QAAQ,CAACc,WAAT,CAAqB,IAArB,EAA2BC,MAA3B;AACH;;;gCAEWC,K,EAAO;AACf,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;AAEJ;;;6BAEQ;AACL,UAAMC,SAAS,GAAG;AACdC,QAAAA,KAAK,EAAE,GADO;AAEdC,QAAAA,MAAM,EAAE,GAFM;AAGdC,QAAAA,WAAW,EAAE,CAHC;AAIdC,QAAAA,WAAW,EAAE,MAJC;AAKdC,QAAAA,WAAW,EAAE,QALC;AAMdC,QAAAA,YAAY,EAAE;AANA,OAAlB;AAQA,UAAMC,WAAW,GAAG;AAChBF,QAAAA,WAAW,EAAE,OADG;AAEhBD,QAAAA,WAAW,EAAE,MAFG;AAGhBI,QAAAA,eAAe,EAAE;AAHD,OAApB;AAKA,UAAMC,WAAW,GAAG;AAChBJ,QAAAA,WAAW,EAAE,OADG;AAEhBD,QAAAA,WAAW,EAAE,MAFG;AAGhBI,QAAAA,eAAe,EAAE;AAHD,OAApB;AAOA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA/CsB3B,S;;AAkD3B,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAe3B,UAAU,CAACD,OAAO,CAAC2B,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { FilePond } from 'react-filepond';\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    onDrop = (acceptedFiles, rejectedFiles) => {\r\n        // Do something with files\r\n    }\r\n\r\n    handleDrop(acceptedfiles, rejected) {\r\n        ReactDOM.findDOMNode(this).submit();\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const baseStyle = {\r\n            width: 200,\r\n            height: 200,\r\n            borderWidth: 2,\r\n            borderColor: '#666',\r\n            borderStyle: 'dashed',\r\n            borderRadius: 5\r\n        };\r\n        const activeStyle = {\r\n            borderStyle: 'solid',\r\n            borderColor: '#6c6',\r\n            backgroundColor: '#eee'\r\n        };\r\n        const rejectStyle = {\r\n            borderStyle: 'solid',\r\n            borderColor: '#c66',\r\n            backgroundColor: '#eee'\r\n        };\r\n\r\n\r\n        return (\r\n            <FilePond />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}