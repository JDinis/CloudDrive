{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      axios.post({\n        url: 'http://localhost:3001/backend/file/upload',\n        method: 'post',\n        data: event.dataTransfer.files,\n        processData: false,\n        contentType: \"multipart/form-data\"\n      }).then(function (res) {\n        alert('All files have been uploaded!');\n      });\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          paddingTop: \"2.6%\",\n          height: \"100%\",\n          paddingBottom: \"100%\"\n        },\n        onDrop: this.handleDrop,\n        onDragOver: this.handleFiles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","axios","FileUploader","props","handleFiles","bind","handleDrop","event","preventDefault","post","url","method","data","dataTransfer","files","processData","contentType","then","res","alert","width","paddingTop","height","paddingBottom","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAEUE,K,EAAO;AACd,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;;AAEDP,MAAAA,KAAK,CAACQ,IAAN,CAAW;AACPC,QAAAA,GAAG,EAAE,2CADE;AAEPC,QAAAA,MAAM,EAAE,MAFD;AAGPC,QAAAA,IAAI,EAAEL,KAAK,CAACM,YAAN,CAAmBC,KAHlB;AAIPC,QAAAA,WAAW,EAAE,KAJN;AAKPC,QAAAA,WAAW,EAAE;AALN,OAAX,EAMGC,IANH,CAMQ,UAACC,GAAD,EAAS;AACbC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACH,OARD;AASH;;;gCAEWZ,K,EAAO;AACf,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;AAEJ;;;6BAEQ;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE,MAA7B;AAAqCC,UAAAA,MAAM,EAAE,MAA7C;AAAqDC,UAAAA,aAAa,EAAE;AAApE,SAAZ;AAA0F,QAAA,MAAM,EAAE,KAAKjB,UAAvG;AAAmH,QAAA,UAAU,EAAE,KAAKF,WAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH;;;;EApCsBP,S;;AAuC3B,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAezB,UAAU,CAACD,OAAO,CAACyB,eAAD,EAAkB,IAAlB,CAAP,CAA+BtB,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    handleDrop(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        axios.post({\r\n            url: 'http://localhost:3001/backend/file/upload',\r\n            method: 'post',\r\n            data: event.dataTransfer.files,\r\n            processData: false,\r\n            contentType: \"multipart/form-data\"\r\n        }).then((res) => {\r\n            alert('All files have been uploaded!');\r\n        });\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", paddingTop: \"2.6%\", height: \"100%\", paddingBottom: \"100%\" }} onDrop={this.handleDrop} onDragOver={this.handleFiles}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}