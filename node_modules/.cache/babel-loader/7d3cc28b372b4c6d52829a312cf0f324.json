{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDriveServer\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport './Styles/FileUploader.css';\nWindow.$ = $;\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n\n    _this.showFiles = function (files) {\n      var $input = $(\"#formUp\").find('input[type=\"file\"]'),\n          $label = $(\"#formUp\").find('label');\n      $label.text(files.length > 1 ? ($input.attr('data-multiple-caption') || '').replace('{count}', files.length) : files[0].name);\n    };\n\n    _this.showFiles = _this.showFiles.bind(_assertThisInitialized(_this));\n    _this.handleEvent = _this.handleEvent.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleDragLeave = _this.handleDragLeave.bind(_assertThisInitialized(_this));\n    _this.handleDragStart = _this.handleDragStart.bind(_assertThisInitialized(_this));\n    _this.handleProgress = _this.handleProgress.bind(_assertThisInitialized(_this));\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDragLeave\",\n    value: function handleDragLeave(event) {\n      this.handleEvent(event);\n      $(\"#formUp\").removeClass('is-dragover');\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.handleEvent(event);\n      if (event.dataTransfer !== undefined) this.showFiles(event.dataTransfer);\n      $(\"#formUp\").trigger('ondrop');\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(event) {\n      this.handleEvent(event);\n      $(\"#formUp\").addClass('is-dragover');\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      $(\"#formUp\").removeClass('is-dragover');\n      if ($(\"#formUp\").hasClass('is-uploading')) return false;\n      var files = event.dataTransfer.files;\n      this.handleEvent(event);\n      var formdata = new FormData();\n      this.showFiles(files);\n\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n        var isFolder = file.name.split(\".\").length === 1 && file.size % 4096 === 0 && file.type === \"\";\n        if (!isFolder) formdata.append('files', file);else {\n          alert(\"Can't upload folders directly, please use the new folder button!\");\n        }\n      }\n\n      axios({\n        url: '/files/upload',\n        method: 'POST',\n        data: formdata,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        if (res.data.success) {\n          $(\"#formUp\").addClass('is-uploading').removeClass('is-error');\n          $(\"#formUp\").find('label').text('File Uploaded Successfully');\n          $(\"#fileUp\").hide();\n          $(\"#formUp\").find('label').text('');\n          window.listFiles();\n        }\n      }, {}, function (err) {\n        $(\"#formUp\").removeClass('is-uploading').addClass('is-error');\n        console.log('Error: ' + err);\n      });\n    }\n  }, {\n    key: \"handleProgress\",\n    value: function handleProgress(event) {\n      var vis = \"#prog\".style.display;\n      if (vis === 'none') \"#prog\".style.display = 'initial';\n      $(\"#prog\").val = event.progress;\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      this.handleEvent(event);\n      $(\"#formUp\").addClass('is-dragover');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          flex: '1 1 auto',\n          flexFlow: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"formUp\",\n        className: \"box has-advanced-upload\",\n        encType: \"multipart/form-data\",\n        method: \"POST\",\n        action: \"/files/upload\",\n        target: \"self\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        display: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"box__file\",\n        \"data-multiple-caption\": \"{count} files selected\",\n        style: {\n          flex: 1,\n          opacity: 0,\n          width: \"100%\",\n          height: \"65vh\"\n        },\n        type: \"file\",\n        title: \"\",\n        name: \"Files\",\n        multiple: true,\n        onChange: this.handleChange,\n        onClick: this.handleEvent,\n        onDrag: this.handleEvent,\n        onDragEnter: this.handleFiles,\n        onDragEnd: this.handleDragLeave,\n        onDrop: this.handleDrop,\n        onDragLeave: this.handleDragLeave,\n        onDragStart: this.handleDragStart,\n        onDragOver: this.handleFiles,\n        onProgress: this.handleProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Choose a file\"), React.createElement(\"span\", {\n        style: {\n          display: 'none'\n        },\n        className: \"box__dragndrop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" or drag it here\"), \".\"), React.createElement(\"button\", {\n        style: {\n          display: 'none'\n        },\n        className: \"box__button\",\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        className: \"box__uploading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Uploading\\u2026\"), React.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        className: \"box__success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Done!\"), React.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        className: \"box__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Error! \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \".\"))));\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDriveServer\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","$","axios","Window","FileUploader","props","showFiles","files","$input","find","$label","text","length","attr","replace","name","bind","handleEvent","handleChange","handleDragLeave","handleDragStart","handleProgress","handleFiles","handleDrop","event","removeClass","dataTransfer","undefined","trigger","e","preventDefault","stopPropagation","addClass","hasClass","formdata","FormData","i","file","isFolder","split","size","type","append","alert","url","method","data","headers","then","res","success","hide","window","listFiles","err","console","log","vis","style","display","val","progress","flex","flexFlow","opacity","width","height","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport './Styles/FileUploader.css';\r\nWindow.$ = $;\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.showFiles = this.showFiles.bind(this);\r\n        this.handleEvent = this.handleEvent.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDragLeave = this.handleDragLeave.bind(this);\r\n        this.handleDragStart = this.handleDragStart.bind(this);\r\n        this.handleProgress = this.handleProgress.bind(this);\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    showFiles = function (files) {\r\n        var $input = $(\"#formUp\").find('input[type=\"file\"]'),\r\n            $label = $(\"#formUp\").find('label');\r\n        $label.text(files.length > 1 ? ($input.attr('data-multiple-caption') || '').replace('{count}', files.length) : files[0].name);\r\n    };\r\n\r\n    handleDragLeave(event) {\r\n        this.handleEvent(event);\r\n        $(\"#formUp\").removeClass('is-dragover');\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.handleEvent(event);\r\n        if (event.dataTransfer !== undefined)\r\n            this.showFiles(event.dataTransfer);\r\n        $(\"#formUp\").trigger('ondrop');\r\n    }\r\n\r\n    handleEvent(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    handleDragStart(event) {\r\n        this.handleEvent(event);\r\n        $(\"#formUp\").addClass('is-dragover');\r\n    }\r\n\r\n    handleDrop(event) {\r\n        $(\"#formUp\").removeClass('is-dragover');\r\n        if ($(\"#formUp\").hasClass('is-uploading')) return false;\r\n\r\n        var files = event.dataTransfer.files;\r\n        this.handleEvent(event);\r\n\r\n        var formdata = new FormData();\r\n\r\n        this.showFiles(files);\r\n\r\n\r\n        for (var i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n\r\n            var isFolder = file.name.split(\".\").length === 1 && file.size % 4096 === 0 && file.type === \"\";\r\n            if (!isFolder)\r\n                formdata.append('files', file);\r\n            else {\r\n                alert(\"Can't upload folders directly, please use the new folder button!\");\r\n            }\r\n        }\r\n\r\n        axios({\r\n            url: '/files/upload',\r\n            method: 'POST',\r\n            data: formdata,\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }).then((res) => {\r\n            if (res.data.success) {\r\n                $(\"#formUp\").addClass('is-uploading').removeClass('is-error');\r\n                $(\"#formUp\").find('label').text('File Uploaded Successfully');\r\n                $(\"#fileUp\").hide();\r\n                $(\"#formUp\").find('label').text('');\r\n                window.listFiles();\r\n            }\r\n        },\r\n            {}, (err) => {\r\n                $(\"#formUp\").removeClass('is-uploading').addClass('is-error');\r\n                console.log('Error: ' + err);\r\n            })\r\n    }\r\n\r\n    handleProgress(event) {\r\n        var vis = (\"#prog\").style.display;\r\n        if (vis === 'none')\r\n            (\"#prog\").style.display = 'initial';\r\n\r\n        $(\"#prog\").val = event.progress;\r\n    }\r\n\r\n    handleFiles(event) {\r\n        this.handleEvent(event);\r\n        $(\"#formUp\").addClass('is-dragover');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ flex: '1 1 auto', flexFlow: 'column' }}>\r\n                <form id=\"formUp\" className=\"box has-advanced-upload\" encType=\"multipart/form-data\" method=\"POST\" action=\"/files/upload\" target=\"self\" >\r\n                    <center display=\"none\">\r\n                        <div className=\"box__input\">\r\n                            <input className=\"box__file\" data-multiple-caption=\"{count} files selected\" style={{ flex: 1, opacity: 0, width: \"100%\", height: \"65vh\" }}\r\n                                type=\"file\" title=\"\" name=\"Files\" multiple\r\n                                onChange={this.handleChange}\r\n                                onClick={this.handleEvent}\r\n                                onDrag={this.handleEvent}\r\n                                onDragEnter={this.handleFiles}\r\n                                onDragEnd={this.handleDragLeave}\r\n                                onDrop={this.handleDrop}\r\n                                onDragLeave={this.handleDragLeave}\r\n                                onDragStart={this.handleDragStart}\r\n                                onDragOver={this.handleFiles}\r\n                                onProgress={this.handleProgress} />\r\n                            <label htmlFor=\"file\"><strong>Choose a file</strong><span style={{ display: 'none' }} className=\"box__dragndrop\"> or drag it here</span>.</label>\r\n                            <button style={{ display: 'none' }} className=\"box__button\" onClick={this.handleChange}>Upload</button>\r\n                        </div>\r\n                        <div style={{ display: 'none' }} className=\"box__uploading\">Uploading&hellip;</div>\r\n                        <div style={{ display: 'none' }} className=\"box__success\">Done!</div>\r\n                        <div style={{ display: 'none' }} className=\"box__error\">Error! <span></span>.</div>\r\n                    </center>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}