{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Dropzone from 'react-dropzone';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {// Do something with files\n    };\n\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(acceptedfiles, rejected) {\n      ReactDOM.findDOMNode(this).submit();\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var baseStyle = {\n        width: 200,\n        height: 200,\n        borderWidth: 2,\n        borderColor: '#666',\n        borderStyle: 'dashed',\n        borderRadius: 5\n      };\n      var activeStyle = {\n        borderStyle: 'solid',\n        borderColor: '#6c6',\n        backgroundColor: '#eee'\n      };\n      var rejectStyle = {\n        borderStyle: 'solid',\n        borderColor: '#c66',\n        backgroundColor: '#eee'\n      };\n      return React.createElement(Dropzone, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragAccept = _ref.isDragAccept,\n            isDragReject = _ref.isDragReject,\n            acceptedFiles = _ref.acceptedFiles,\n            rejectedFiles = _ref.rejectedFiles;\n\n        var styles = _objectSpread({}, baseStyle);\n\n        styles = isDragActive ? _objectSpread({}, styles, activeStyle) : styles;\n        styles = isDragReject ? _objectSpread({}, styles, rejectStyle) : styles;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          style: styles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, isDragAccept ? 'Drop' : 'Drag', \" files here...\"), isDragReject && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Unsupported file type...\"));\n      });\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","Dropzone","FileUploader","props","onDrop","acceptedFiles","rejectedFiles","handleFiles","bind","handleDrop","acceptedfiles","rejected","findDOMNode","submit","event","preventDefault","baseStyle","width","height","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","styles","mapStateToProps","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAOnBC,MAPmB,GAOV,UAACC,aAAD,EAAgBC,aAAhB,EAAkC,CACvC;AACH,KATkB;;AAGf,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAMUE,a,EAAeC,Q,EAAU;AAChCb,MAAAA,QAAQ,CAACc,WAAT,CAAqB,IAArB,EAA2BC,MAA3B;AACH;;;gCAEWC,K,EAAO;AACf,UAAIA,KAAK,CAACC,cAAV,EAA0B;AACtBD,QAAAA,KAAK,CAACC,cAAN;AACH;AAEJ;;;6BAEQ;AACL,UAAMC,SAAS,GAAG;AACdC,QAAAA,KAAK,EAAE,GADO;AAEdC,QAAAA,MAAM,EAAE,GAFM;AAGdC,QAAAA,WAAW,EAAE,CAHC;AAIdC,QAAAA,WAAW,EAAE,MAJC;AAKdC,QAAAA,WAAW,EAAE,QALC;AAMdC,QAAAA,YAAY,EAAE;AANA,OAAlB;AAQA,UAAMC,WAAW,GAAG;AAChBF,QAAAA,WAAW,EAAE,OADG;AAEhBD,QAAAA,WAAW,EAAE,MAFG;AAGhBI,QAAAA,eAAe,EAAE;AAHD,OAApB;AAKA,UAAMC,WAAW,GAAG;AAChBJ,QAAAA,WAAW,EAAE,OADG;AAEhBD,QAAAA,WAAW,EAAE,MAFG;AAGhBI,QAAAA,eAAe,EAAE;AAHD,OAApB;AAOA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,gBAA6G;AAAA,YAA1GE,YAA0G,QAA1GA,YAA0G;AAAA,YAA5FC,aAA4F,QAA5FA,aAA4F;AAAA,YAA7EC,YAA6E,QAA7EA,YAA6E;AAAA,YAA/DC,YAA+D,QAA/DA,YAA+D;AAAA,YAAjDC,YAAiD,QAAjDA,YAAiD;AAAA,YAAnCzB,aAAmC,QAAnCA,aAAmC;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;;AAC1G,YAAIyB,MAAM,qBAAQf,SAAR,CAAV;;AACAe,QAAAA,MAAM,GAAGH,YAAY,qBAAQG,MAAR,EAAmBR,WAAnB,IAAmCQ,MAAxD;AACAA,QAAAA,MAAM,GAAGD,YAAY,qBAAQC,MAAR,EAAmBN,WAAnB,IAAmCM,MAAxD;AAEA,eACI,6CACQL,YAAY,EADpB;AAEI,UAAA,KAAK,EAAEK,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAII,+CAAWJ,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKE,YAAY,GAAG,MAAH,GAAY,MAD7B,mBALJ,EAQKC,YAAY,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARrB,CADJ;AAYH,OAlBL,CADJ;AAsBH;;;;EAlEsBjC,S;;AAqE3B,IAAMmC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAejC,UAAU,CAACD,OAAO,CAACiC,eAAD,EAAkB,IAAlB,CAAP,CAA+B9B,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Dropzone from 'react-dropzone'\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    onDrop = (acceptedFiles, rejectedFiles) => {\r\n        // Do something with files\r\n    }\r\n\r\n    handleDrop(acceptedfiles, rejected) {\r\n        ReactDOM.findDOMNode(this).submit();\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const baseStyle = {\r\n            width: 200,\r\n            height: 200,\r\n            borderWidth: 2,\r\n            borderColor: '#666',\r\n            borderStyle: 'dashed',\r\n            borderRadius: 5\r\n        };\r\n        const activeStyle = {\r\n            borderStyle: 'solid',\r\n            borderColor: '#6c6',\r\n            backgroundColor: '#eee'\r\n        };\r\n        const rejectStyle = {\r\n            borderStyle: 'solid',\r\n            borderColor: '#c66',\r\n            backgroundColor: '#eee'\r\n        };\r\n\r\n\r\n        return (\r\n            <Dropzone>\r\n                {({ getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\r\n                    let styles = { ...baseStyle }\r\n                    styles = isDragActive ? { ...styles, ...activeStyle } : styles\r\n                    styles = isDragReject ? { ...styles, ...rejectStyle } : styles\r\n\r\n                    return (\r\n                        <div\r\n                            {...getRootProps()}\r\n                            style={styles}\r\n                        >\r\n                            <input {...getInputProps()} />\r\n                            <div>\r\n                                {isDragAccept ? 'Drop' : 'Drag'} files here...\r\n                      </div>\r\n                            {isDragReject && <div>Unsupported file type...</div>}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Dropzone>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}