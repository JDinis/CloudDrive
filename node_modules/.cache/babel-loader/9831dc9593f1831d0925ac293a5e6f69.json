{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesh\\\\Desktop\\\\CloudDrive\\\\clouddrive\\\\src\\\\Components\\\\FileUploader.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { FilePond } from 'react-filepond';\n\nvar FileUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUploader, _Component);\n\n  function FileUploader(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileUploader).call(this, props));\n    _this.handleFiles = _this.handleFiles.bind(_assertThisInitialized(_this));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileUploader, [{\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      ReactDOM.findDOMNode(this).submit();\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function handleFiles(event) {\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Pond = FilePond.create({\n        name: 'Files'\n      });\n      this.Pond.setOptions({\n        url: 'http://localhost:3001',\n        timeout: 7000,\n        process: {\n          url: './backend/file/upload',\n          method: 'POST',\n          withCredentials: false\n        },\n        revert: './revert',\n        restore: './restore/',\n        load: './load/',\n        fetch: './fetch/'\n      });\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          paddingTop: \"2.6%\",\n          height: \"100%\",\n          paddingBottom: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Pond, {\n        allowMultiple: true,\n        server: \"http://localhost:3001/backend/file/upload\"\n        /*server=\"https://clouddriveserver.azurewebsites.net/backend/file\"*/\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));","map":{"version":3,"sources":["C:\\Users\\thesh\\Desktop\\CloudDrive\\clouddrive\\src\\Components\\FileUploader.js"],"names":["React","Component","ReactDOM","connect","withRouter","FilePond","FileUploader","props","handleFiles","bind","handleDrop","event","findDOMNode","submit","preventDefault","Pond","create","name","setOptions","url","timeout","process","method","withCredentials","revert","restore","load","fetch","width","paddingTop","height","paddingBottom","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AAJe;AAKlB;;;;+BAEUE,K,EAAO;AACdT,MAAAA,QAAQ,CAACU,WAAT,CAAqB,IAArB,EAA2BC,MAA3B;AACH;;;gCAEWF,K,EAAO;AACf,UAAIA,KAAK,CAACG,cAAV,EAA0B;AACtBH,QAAAA,KAAK,CAACG,cAAN;AACH;AAEJ;;;6BAEQ;AACL,UAAMC,IAAI,GAAGV,QAAQ,CAACW,MAAT,CAAgB;AACzBC,QAAAA,IAAI,EAAE;AADmB,OAAhB,CAAb;AAKA,WAAKF,IAAL,CAAUG,UAAV,CAAqB;AACjBC,QAAAA,GAAG,EAAE,uBADY;AAEjBC,QAAAA,OAAO,EAAE,IAFQ;AAGjBC,QAAAA,OAAO,EAAE;AACLF,UAAAA,GAAG,EAAE,uBADA;AAELG,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,eAAe,EAAE;AAHZ,SAHQ;AAQjBC,QAAAA,MAAM,EAAE,UARS;AASjBC,QAAAA,OAAO,EAAE,YATQ;AAUjBC,QAAAA,IAAI,EAAE,SAVW;AAWjBC,QAAAA,KAAK,EAAE;AAXU,OAArB;AAcA,aACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE,MAA7B;AAAqCC,UAAAA,MAAM,EAAE,MAA7C;AAAqDC,UAAAA,aAAa,EAAE;AAApE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,IAArB;AAA2B,QAAA,MAAM,EAAC;AAA4C;AAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EA5CsB9B,S;;AA+C3B,IAAM+B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAGA,eAAe7B,UAAU,CAACD,OAAO,CAAC6B,eAAD,EAAkB,IAAlB,CAAP,CAA+B1B,YAA/B,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { FilePond } from 'react-filepond';\r\n\r\nclass FileUploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleFiles = this.handleFiles.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n    }\r\n\r\n    handleDrop(event) {\r\n        ReactDOM.findDOMNode(this).submit();\r\n    }\r\n\r\n    handleFiles(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const Pond = FilePond.create({\r\n            name: 'Files'\r\n        });\r\n\r\n\r\n        this.Pond.setOptions({\r\n            url: 'http://localhost:3001',\r\n            timeout: 7000,\r\n            process: {\r\n                url: './backend/file/upload',\r\n                method: 'POST',\r\n                withCredentials: false,\r\n            },\r\n            revert: './revert',\r\n            restore: './restore/',\r\n            load: './load/',\r\n            fetch: './fetch/'\r\n        });\r\n\r\n        return (\r\n            <div style={{ width: \"100%\", paddingTop: \"2.6%\", height: \"100%\", paddingBottom: \"100%\" }}>\r\n                <Pond allowMultiple={true} server=\"http://localhost:3001/backend/file/upload\" /*server=\"https://clouddriveserver.azurewebsites.net/backend/file\"*/ />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(FileUploader));"]},"metadata":{},"sourceType":"module"}